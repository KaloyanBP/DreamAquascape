@model DreamAquascape.Web.ViewModels.ContestEntry.ContestEntryDetailsViewModel
@{
    ViewData["Title"] = Model.Title + " - Contest Entry";
}

<div class="container my-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col">
            <!-- Breadcrumb Navigation -->
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">
                        <a asp-controller="Contests" asp-action="Index">
                            <i class="bi bi-trophy me-1"></i>Contests
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a asp-controller="Contests" asp-action="Details" asp-route-id="@Model.ContestId">
                            @Model.ContestTitle
                        </a>
                    </li>
                    <li class="breadcrumb-item active" aria-current="page">@Model.Title</li>
                </ol>
            </nav>

            <!-- Page Header -->
            <div class="d-flex justify-content-between align-items-start mb-3">
                <div>
                    <h1 class="display-6 mb-2">
                        @Model.Title
                        @if (Model.IsWinner)
                        {
                            <span class="badge bg-warning text-dark ms-2">
                                <i class="bi bi-crown me-1"></i>
                                @if (Model.WinnerPosition.HasValue)
                                {
                                    @GetOrdinalNumber(Model.WinnerPosition.Value) @PlaceText @WinnerText
                                }
                                else
                                {
                                    @WinnerText
                                }
                            </span>
                        }
                    </h1>
                    <p class="text-muted mb-2">
                        <i class="bi bi-person me-1"></i>
                        by <strong>@Model.ParticipantName</strong>
                        <span class="mx-2">•</span>
                        <i class="bi bi-calendar me-1"></i>
                        Submitted @Model.SubmittedAt.ToString("MMM dd, yyyy 'at' HH:mm")
                    </p>
                </div>
                <div class="text-end">
                    <!-- Entry Status Badge -->
                    <div class="mb-2">
                        <span class="badge @GetContestPhaseBadgeClass(Model.ContestPhase) fs-6">
                            <i class="bi bi-clock me-1"></i>
                            @Model.ContestPhase Phase
                        </span>
                    </div>
                    <!-- Entry Stats -->
                    <div class="d-flex gap-3 text-muted small">
                        <div class="text-center">
                            <div class="fw-bold text-primary fs-5">@Model.VoteCount</div>
                            <div>Votes</div>
                        </div>
                        <div class="text-center">
                            <div class="fw-bold text-info fs-5">#@Model.EntryRanking</div>
                            <div>Rank</div>
                        </div>
                        <div class="text-center">
                            <div class="fw-bold text-success fs-5">@Model.VotePercentage.ToString("F1")%</div>
                            <div>Share</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Image Gallery -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-body p-0">
                    @if (Model.Images.Any())
                    {
                        @if (Model.Images.Count == 1)
                        {
                            <!-- Single Image -->
                            <img src="@Model.Images.First().ImageUrl"
                                 alt="@Model.Title"
                                 class="img-fluid rounded entry-main-image">
                        }
                        else
                        {
                            <!-- Image Carousel -->
                            <div id="entryImageCarousel" class="carousel slide" data-bs-ride="carousel">
                                <div class="carousel-indicators">
                                    @for (int i = 0; i < Model.Images.Count; i++)
                                    {
                                        <button type="button"
                                                data-bs-target="#entryImageCarousel"
                                                data-bs-slide-to="@i"
                                                class="@(i == 0 ? "active" : "")"
                                                aria-current="@(i == 0 ? "true" : "false")"
                                                aria-label="Slide @(i + 1)"></button>
                                    }
                                </div>
                                <div class="carousel-inner">
                                    @for (int i = 0; i < Model.Images.Count; i++)
                                    {
                                        var image = Model.Images[i];
                                        <div class="carousel-item @(i == 0 ? "active" : "")">
                                            <img src="@image.ImageUrl"
                                                 class="d-block w-100 entry-carousel-image"
                                                 alt="@Model.Title - Image @(i + 1)">
                                            @if (!string.IsNullOrEmpty(image.Caption))
                                            {
                                                <div class="carousel-caption d-none d-md-block">
                                                    <p>@image.Caption</p>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                                <button class="carousel-control-prev" type="button" data-bs-target="#entryImageCarousel" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#entryImageCarousel" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <!-- No Images Placeholder -->
                        <div class="text-center py-5 text-muted">
                            <i class="bi bi-image fa-3x mb-3"></i>
                            <p>No images available for this entry</p>
                        </div>
                    }
                </div>
            </div>

            <!-- Entry Description -->
            @if (!string.IsNullOrEmpty(Model.Description))
            {
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-card-text me-2"></i>
                            Description
                        </h5>
                    </div>
                    <div class="card-body">
                        <p class="card-text">@Model.Description</p>
                    </div>
                </div>
            }

            <!-- Voting History (if contest ended and user is owner or admin) -->
            @if (Model.ContestPhase == "Results" && (Model.IsOwnEntry || User.IsInRole("Administrator")))
            {
                <div class="card border-0 shadow-sm mb-4">
                    <div class="card-header bg-white">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-hand-thumbs-up me-2"></i>
                            Voting History
                            <span class="badge bg-primary ms-2">@Model.VoteCount votes</span>
                        </h5>
                    </div>
                    <div class="card-body">
                        @if (Model.Votes.Any())
                        {
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="d-flex justify-content-between small text-muted mb-3">
                                        <span>First vote: @Model.FirstVoteDate?.ToString("MMM dd, yyyy")</span>
                                        <span>Last vote: @Model.LastVoteDate?.ToString("MMM dd, yyyy")</span>
                                    </div>
                                </div>
                            </div>
                            <!-- Vote Timeline (simplified) -->
                            <div class="vote-timeline">
                                @foreach (var vote in Model.Votes.Take(10))
                                {
                                    <div class="vote-timeline-item">
                                        <i class="bi bi-heart-fill text-danger"></i>
                                        <span class="small text-muted">
                                            @(vote.IsAnonymous ? "Anonymous user" : vote.VoterName) voted
                                            @vote.VotedAt.ToString("MMM dd 'at' HH:mm")
                                        </span>
                                    </div>
                                }
                                @if (Model.Votes.Count > 10)
                                {
                                    <div class="text-center mt-2">
                                        <span class="small text-muted">+ @(Model.Votes.Count - 10) more votes</span>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-center py-3 text-muted">
                                <i class="bi bi-heart fa-2x mb-2"></i>
                                <p>No votes received yet</p>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Actions Card -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h6 class="card-title mb-0">Actions</h6>
                </div>
                <div class="card-body">
                    <div class="d-grid gap-2">
                        @if (Model.CanUserVote)
                        {
                            <!-- Vote Button -->
                            <form method="post" asp-controller="Votes" asp-action="CastVote" class="d-grid">
                                <input type="hidden" name="contestId" value="@Model.ContestId" />
                                <input type="hidden" name="entryId" value="@Model.Id" />
                                <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-success">
                                    <i class="bi bi-hand-thumbs-up me-2"></i>Vote for This Entry
                                </button>
                            </form>
                        }
                        else if (Model.HasUserVoted)
                        {
                            <!-- Already Voted -->
                            <div class="d-grid gap-2">
                                <div class="alert alert-success mb-2 py-2">
                                    <i class="bi bi-check-circle me-1"></i>
                                    You've voted for this entry!
                                </div>
                                @if (Model.ContestPhase == "Voting")
                                {
                                    <form method="post" asp-controller="Votes" asp-action="RemoveVote" class="d-grid">
                                        <input type="hidden" name="contestId" value="@Model.ContestId" />
                                        <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                        @Html.AntiForgeryToken()
                                        <button type="submit" class="btn btn-outline-secondary btn-sm"
                                                onclick="return confirm('Are you sure you want to remove your vote?')">
                                            <i class="bi bi-x-circle me-1"></i>Remove Vote
                                        </button>
                                    </form>
                                }
                            </div>
                        }

                        @if (Model.CanEdit)
                        {
                            <!-- Edit Entry (if submission period is still active) -->
                            <a asp-controller="ContestEntries"
                               asp-action="Edit"
                               asp-route-contestId="@Model.ContestId"
                               asp-route-entryId="@Model.Id"
                               class="btn btn-outline-primary">
                                <i class="bi bi-pencil me-2"></i>Edit Entry
                            </a>
                        }

                        <!-- View Contest -->
                        <a asp-controller="Contests"
                           asp-action="Details"
                           asp-route-id="@Model.ContestId"
                           class="btn btn-outline-info">
                            <i class="bi bi-trophy me-2"></i>View Contest
                        </a>

                        @if (Model.IsOwnEntry)
                        {
                            <!-- Share Entry -->
                            <button class="btn btn-outline-secondary" onclick="shareEntry()">
                                <i class="bi bi-share me-2"></i>Share Entry
                            </button>
                        }
                    </div>
                </div>
            </div>

            <!-- Contest Information -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h6 class="card-title mb-0">Contest Information</h6>
                </div>
                <div class="card-body">
                    <h6 class="card-subtitle mb-2">@Model.ContestTitle</h6>
                    @if (!string.IsNullOrEmpty(Model.ContestDescription))
                    {
                        <p class="card-text small text-muted">@Model.ContestDescription</p>
                    }

                    <div class="contest-timeline">
                        <div class="timeline-item">
                            <strong>Submission Period:</strong><br>
                            <small class="text-muted">
                                @Model.ContestSubmissionStartDate.ToString("MMM dd") -
                                @Model.ContestSubmissionEndDate.ToString("MMM dd, yyyy")
                            </small>
                        </div>
                        <div class="timeline-item">
                            <strong>Voting Period:</strong><br>
                            <small class="text-muted">
                                @Model.ContestVotingStartDate.ToString("MMM dd") -
                                @Model.ContestVotingEndDate.ToString("MMM dd, yyyy")
                            </small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Competition Stats -->
            <div class="card border-0 shadow-sm mb-4">
                <div class="card-header bg-white">
                    <h6 class="card-title mb-0">Competition Stats</h6>
                </div>
                <div class="card-body">
                    <div class="row text-center">
                        <div class="col-4">
                            <div class="stat-item">
                                <div class="fw-bold text-primary">@Model.EntryRanking</div>
                                <div class="small text-muted">Current Rank</div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="stat-item">
                                <div class="fw-bold text-info">@Model.TotalEntriesInContest</div>
                                <div class="small text-muted">Total Entries</div>
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="stat-item">
                                <div class="fw-bold text-success">@Model.VotePercentage.ToString("F1")%</div>
                                <div class="small text-muted">Vote Share</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Related Entries -->
            @if (Model.RelatedEntries.Any())
            {
                <div class="card border-0 shadow-sm">
                    <div class="card-header bg-white">
                        <h6 class="card-title mb-0">Other Entries in This Contest</h6>
                    </div>
                    <div class="card-body">
                        @foreach (var related in Model.RelatedEntries)
                        {
                            <div class="related-entry-item mb-3">
                                <div class="row align-items-center">
                                    <div class="col-3">
                                        @if (!string.IsNullOrEmpty(related.ThumbnailImageUrl))
                                        {
                                            <img src="@related.ThumbnailImageUrl"
                                                 alt="@related.Title"
                                                 class="img-fluid rounded related-entry-thumb">
                                        }
                                        else
                                        {
                                            <div class="related-entry-thumb-placeholder">
                                                <i class="bi bi-image"></i>
                                            </div>
                                        }
                                    </div>
                                    <div class="col-9">
                                        <h6 class="mb-1">
                                            <a asp-controller="ContestEntries"
                                               asp-action="Details"
                                               asp-route-contestId="@Model.ContestId"
                                               asp-route-entryId="@related.Id"
                                               class="text-decoration-none">
                                                @related.Title
                                                @if (related.IsWinner)
                                                {
                                                    <i class="bi bi-crown text-warning ms-1"></i>
                                                }
                                            </a>
                                        </h6>
                                        <div class="small text-muted">
                                            by @related.ParticipantName
                                            <span class="mx-1">•</span>
                                            @related.VoteCount votes
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    // Constants for winner text
    private const string PlaceText = "Place";
    private const string WinnerText = "Winner";

    string GetContestPhaseBadgeClass(string phase)
    {
        return phase switch
        {
            "Submission" => "bg-info",
            "Voting" => "bg-success",
            "Results" => "bg-secondary",
            _ => "bg-primary"
        };
    }

    string GetOrdinalNumber(int number)
    {
        if (number <= 0) return number.ToString();

        switch (number % 100)
        {
            case 11:
            case 12:
            case 13:
                return number + "th";
        }

        switch (number % 10)
        {
            case 1:
                return number + "st";
            case 2:
                return number + "nd";
            case 3:
                return number + "rd";
            default:
                return number + "th";
        }
    }
}

@section Styles {
    <style>
        .entry-main-image {
            max-height: 600px;
            width: 100%;
            object-fit: cover;
        }

        .entry-carousel-image {
            height: 500px;
            object-fit: cover;
        }

        .related-entry-thumb {
            width: 60px;
            height: 60px;
            object-fit: cover;
        }

        .related-entry-thumb-placeholder {
            width: 60px;
            height: 60px;
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #6c757d;
        }

        .related-entry-item:not(:last-child) {
            border-bottom: 1px solid #e9ecef;
            padding-bottom: 12px;
        }

        .contest-timeline .timeline-item:not(:last-child) {
            margin-bottom: 15px;
        }

        .vote-timeline .vote-timeline-item {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 8px;
        }

        .stat-item {
            padding: 8px 0;
        }

        @@media (max-width: 768px) {
            .entry-carousel-image

        {
            height: 300px;
        }

        }
    </style>
}

@section Scripts {
    <script>
        function shareEntry() {
            if (navigator.share) {
                navigator.share({
                    title: '@Model.Title',
                    text: 'Check out this aquascaping contest entry by @Model.ParticipantName',
                    url: window.location.href
                });
            } else {
                // Fallback: copy to clipboard
                navigator.clipboard.writeText(window.location.href).then(function() {
                    alert('Entry URL copied to clipboard!');
                });
            }
        }

        // Initialize Bootstrap tooltips
        $(document).ready(function() {
            $('[data-bs-toggle="tooltip"]').tooltip();
        });
    </script>
}
