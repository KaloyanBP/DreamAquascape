@model DreamAquascape.Web.ViewModels.Contest.ContestDetailsViewModel

<div class="container my-4">
    <div class="card shadow-lg mb-4">
        <div class="card-body">
            <h2 class="card-title">@Model.Title</h2>
            <p class="card-text">@Model.Description</p>
            <div class="mb-2">
                <span class="badge bg-info me-2">
                    Start: @Model.StartDate.ToShortDateString()
                </span>
                <span class="badge bg-info me-2">
                    End: @Model.EndDate.ToShortDateString()
                </span>
                <span class="badge @(Model.IsActive ? "bg-success" : "bg-secondary")">
                    @(Model.IsActive ? "Active" : "Archived")
                </span>
            </div>
            @if (Model.Prize != null)
            {
                <div class="alert alert-warning mt-3">
                    <strong>Prize:</strong> @Model.Prize.Name - @Model.Prize.Description
                </div>
            }

            <!-- Winner Announcement Section -->
            @if (Model.WinnerEntryId.HasValue)
            {
                var winnerEntry = Model.Entries.FirstOrDefault(e => e.Id == Model.WinnerEntryId.Value);
                if (winnerEntry != null)
                {
                    <div class="alert alert-success mt-3 winner-announcement">
                        <div class="row align-items-center">
                            <div class="col-auto">
                                <div class="winner-trophy-icon">
                                    <i class="bi bi-trophy-fill fa-3x text-warning"></i>
                                </div>
                            </div>
                            <div class="col">
                                <h4 class="alert-heading mb-2">
                                    <i class="bi bi-award me-2"></i>Contest Winner!
                                </h4>
                                <p class="mb-1">
                                    <strong>@winnerEntry.UserName</strong> won with <strong>@winnerEntry.VoteCount votes</strong>
                                </p>
                                <p class="mb-0 text-muted">
                                    Entry: "@winnerEntry.Title"
                                </p>
                            </div>
                            <div class="col-auto">
                                <a href="#winner-entry-@winnerEntry.Id" class="btn btn-warning btn-sm">
                                    <i class="bi bi-eye me-1"></i>View Winning Entry
                                </a>
                            </div>
                        </div>
                        <!-- Contest Statistics -->
                        <hr class="my-3">
                        <div class="row text-center">
                            <div class="col-6 col-md-3">
                                <div class="contest-stat">
                                    <div class="stat-number">@Model.Entries.Count</div>
                                    <div class="stat-label">Total Entries</div>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="contest-stat">
                                    <div class="stat-number">@Model.Entries.Sum(e => e.VoteCount)</div>
                                    <div class="stat-label">Total Votes</div>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="contest-stat">
                                    <div class="stat-number">@Math.Round((double)winnerEntry.VoteCount / Model.Entries.Sum(e => e.VoteCount) * 100, 1)%</div>
                                    <div class="stat-label">Winner Share</div>
                                </div>
                            </div>
                            <div class="col-6 col-md-3">
                                <div class="contest-stat">
                                    <div class="stat-number">@(Model.Entries.Count(e => e.VoteCount > 0))</div>
                                    <div class="stat-label">Entries with Votes</div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>

    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3>Entries</h3>
        @if (Model.CanSubmitEntry)
        {
            <a href="@Url.Action("Create", "ContestEntries", new { contestId = Model.Id })" class="btn btn-primary">
                <i class="bi bi-plus-circle"></i> Submit Your Entry
            </a>
        }
    </div>

    @if (Model.Entries.Any())
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var entry in Model.Entries)
            {
                <div class="col">
                    <div id="@(entry.Id == Model.WinnerEntryId ? "winner-entry-" + entry.Id : "")"
                         class="card h-100 shadow-sm @(entry.IsOwnEntry ? "border-primary" : "") @(entry.Id == Model.WinnerEntryId ? "winner-card border-warning border-3" : "")">

                        @if (entry.Id == Model.WinnerEntryId)
                        {
                            <!-- Winner Crown Overlay -->
                            <div class="winner-crown-overlay">
                                <div class="winner-crown">
                                    <i class="bi bi-award-fill"></i>
                                </div>
                            </div>
                            <!-- Winner Ribbon -->
                            <div class="winner-ribbon">
                                <span>WINNER</span>
                            </div>
                        }

                        <!-- Carousel for multiple images -->
                        <div id="carouselEntry@(entry.Id)" class="carousel slide" data-bs-ride="carousel">
                            <div class="carousel-inner">
                                @for (int i = 0; i < entry.EntryImages.Count; i++)
                                {
                                    var image = entry.EntryImages[i];
                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                        <img src="@image" class="d-block w-100" style="object-fit:cover; height:220px;">
                                    </div>
                                }
                            </div>
                            @if (entry.EntryImages.Count > 1)
                            {
                                <button class="carousel-control-prev" type="button" data-bs-target="#carouselEntry@(entry.Id)" data-bs-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Previous</span>
                                </button>
                                <button class="carousel-control-next" type="button" data-bs-target="#carouselEntry@(entry.Id)" data-bs-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="visually-hidden">Next</span>
                                </button>
                            }
                        </div>
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <h5 class="card-title mb-0">
                                    @entry.UserName
                                    @if (entry.Id == Model.WinnerEntryId)
                                    {
                                        <span class="badge bg-warning text-dark ms-2">
                                            <i class="bi bi-trophy me-1"></i>WINNER
                                        </span>
                                    }
                                </h5>
                                @if (entry.Id == Model.WinnerEntryId)
                                {
                                    <div class="winner-votes-highlight">
                                        <span class="badge bg-success fs-6">
                                            <i class="bi bi-hand-thumbs-up me-1"></i>@entry.VoteCount votes
                                        </span>
                                    </div>
                                }
                            </div>
                            @if (!string.IsNullOrEmpty(entry.Title))
                            {
                                <h6 class="text-muted mb-2">@entry.Title</h6>
                            }
                            <p class="card-text">@entry.Description</p>
                        </div>
                        <div class="card-footer d-flex justify-content-between align-items-center">
                            <div>
                                @if (entry.Id != Model.WinnerEntryId)
                                {
                                    <span class="badge bg-primary">
                                        <i class="bi bi-hand-thumbs-up"></i> @entry.VoteCount votes
                                    </span>
                                }
                                @if (entry.IsOwnEntry)
                                {
                                    <span class="badge bg-info">Your Entry</span>
                                }
                            </div>
                            <div class="entry-actions">
                                @if (User.Identity.IsAuthenticated)
                                {
                                    @if (entry.CanUserVote)
                                    {
                                        <!-- User can vote -->
                                        <form method="post" asp-controller="Votes" asp-action="CastVote" class="d-inline">
                                            <input type="hidden" name="contestId" value="@Model.Id" />
                                            <input type="hidden" name="entryId" value="@entry.Id" />
                                            <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-success btn-sm">
                                                <i class="bi bi-hand-thumbs-up"></i> Vote
                                            </button>
                                        </form>
                                    }
                                    else if (entry.HasUserVoted)
                                    {
                                        <!-- User has already voted -->
                                        <span class="badge bg-success me-2">
                                            <i class="bi bi-check-circle"></i> Voted
                                        </span>

                                        <!-- Option to remove vote -->
                                        <form method="post" asp-controller="Votes" asp-action="RemoveVote" class="d-inline">
                                            <input type="hidden" name="contestId" value="@Model.Id" />
                                            <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn btn-outline-secondary btn-sm"
                                                    onclick="return confirm('Are you sure you want to remove your vote?')">
                                                <i class="bi bi-x-circle"></i> Remove Vote
                                            </button>
                                        </form>
                                    }
                                    else
                                    {
                                        <!-- User cannot vote (own entry, contest ended, etc.) -->
                                        <span class="text-muted">
                                            <i class="bi bi-info-circle"></i> Cannot vote
                                        </span>
                                    }
                                }
                                else
                                {
                                    @if (@Model.CanVote)
                                    {
                                        <!-- User not logged in -->
                                        <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Context.Request.Path"
                                           class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-box-arrow-in-right"></i> Login to Vote
                                        </a>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-secondary">No entries yet.</div>
    }

    <div class="mt-4">
        <a href="@Url.Action("Index", "Contests")" class="btn btn-outline-secondary">
            <i class="bi bi-arrow-left"></i> Back to Contests
        </a>
    </div>
</div>

@section Styles {
    <style>
        /* Winner Announcement Styles */
        .winner-announcement {
            background: linear-gradient(135deg, #fff3cd 0%, #ffeaa7 100%);
            border: 2px solid #ffc107;
            animation: winnerGlow 2s ease-in-out infinite alternate;
        }

        @@keyframes winnerGlow {
        from {
            box-shadow: 0 0 5px rgba(255, 193, 7, 0.5);
        }

        to {
            box-shadow: 0 0 20px rgba(255, 193, 7, 0.8);
        }

        }

        .winner-trophy-icon {
            text-align: center;
            animation: trophyBounce 2s ease-in-out infinite;
        }

        @@keyframes trophyBounce {
        0%, 20%, 60%, 100% {
            transform: translateY(0);
        }

        40% {
            transform: translateY(-10px);
        }

        80% {
            transform: translateY(-5px);
        }

        }

        /* Winner Card Styles */
        .winner-card {
            position: relative;
            background: linear-gradient(135deg, #fff9e6 0%, #fff3cd 100%);
            transform: scale(1.02);
            box-shadow: 0 8px 25px rgba(255, 193, 7, 0.3) !important;
            animation: winnerPulse 3s ease-in-out infinite;
        }

        @@keyframes winnerPulse {
        0%, 100% {
            transform: scale(1.02);
        }

        50% {
            transform: scale(1.05);
        }

        }

        /* Winner Crown Overlay */
        .winner-crown-overlay {
            position: absolute;
            top: -15px;
            right: 15px;
            z-index: 10;
        }

        .winner-crown {
            background: #ffc107;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 12px rgba(255, 193, 7, 0.4);
            border: 3px solid #fff;
            font-size: 20px;
            color: #fff;
            animation: crownRotate 4s linear infinite;
        }

        .winner-crown i {
            color: #fff !important;
            font-size: 20px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.3);
        }

        @@keyframes crownRotate {
        0% {
            transform: rotate(0deg);
        }

        25% {
            transform: rotate(-5deg);
        }

        75% {
            transform: rotate(5deg);
        }

        100% {
            transform: rotate(0deg);
        }

        }

        /* Winner Ribbon */
        .winner-ribbon {
            position: absolute;
            top: 20px;
            left: -10px;
            background: #dc3545;
            color: white;
            padding: 8px 15px;
            font-size: 12px;
            font-weight: bold;
            z-index: 5;
            clip-path: polygon(0 0, calc(100% - 10px) 0, 100% 50%, calc(100% - 10px) 100%, 0 100%);
            box-shadow: 0 2px 8px rgba(220, 53, 69, 0.3);
        }

        /* Winner Votes Highlight */
        .winner-votes-highlight .badge {
            font-size: 14px;
            padding: 8px 12px;
            animation: voteHighlight 2s ease-in-out infinite alternate;
        }

        @@keyframes voteHighlight {
        from {
            transform: scale(1);
        }

        to {
            transform: scale(1.1);
        }

        }

        /* Contest Statistics */
        .contest-stat {
            text-align: center;
            padding: 10px;
        }

        .stat-number {
            font-size: 24px;
            font-weight: bold;
            color: #28a745;
        }

        .stat-label {
            font-size: 12px;
            color: #6c757d;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        /* Smooth scroll to winner entry */
        html {
            scroll-behavior: smooth;
        }

        /* Winner card hover effects */
        .winner-card:hover {
            transform: scale(1.05);
            box-shadow: 0 12px 35px rgba(255, 193, 7, 0.4) !important;
        }

        /* Contest status indicators */
        .contest-status-ended {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .winner-announcement .row

        {
            text-align: center;
        }

        .winner-announcement .col-auto {
            margin-bottom: 10px;
        }

        .winner-card {
            transform: scale(1);
        }

            .winner-card:hover {
                transform: scale(1.02);
            }

        }
    </style>
}

